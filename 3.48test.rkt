#lang racket
(require sicp)
(define id 1)
(define (identify)
		(set! id (+ 1 id))
		(+ 1 id))
(define (make-account-and-serializer balance)
		(define myid (identify))
		(define (withdraw amount)
		  ***)
		(define (deposit amount)
		  ***)
		(let ((balance-serializer (make-serializer)))
			 (define (dispatch m)
					 (cond ((eq? m 'withdraw) withdraw)
						   ((eq? m 'deposit) deposit)
						   ((eq? m 'serializer) balance-serializer)
						   ((eq? m 'id) myid)
						   (else (error "Unknown Request"))))))
(define (serialized-exchange account1 account2)
		(let ((serializer1 (account1 'serializer))
			  (serializer2 (account2 'serializer)))
		  (if (< (account1 'id) (account2 'id))
			   ((serializer1 (serializer2 exchange)) account1 account2)
			   ((serializer2 (serializer1 exchange))))))
